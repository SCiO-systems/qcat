FROM python:3.6

ENV PYTHONUNBUFFERED 1
RUN mkdir /app
COPY . /app
WORKDIR /app
ENV PYTHONPATH "${PYTHONPATH}:/app/apps"

RUN useradd -ms /bin/bash qcat
RUN chown -R qcat:qcat /app

# Django-gis packages
RUN apt-get update && apt-get install -y \
    curl \
    binutils \
    libproj-dev \
    gdal-bin \
    libmemcached-dev \
    netcat \
    nano \
    telnet

# Install wkhtmltopdf binary for summary pdf
RUN wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz
RUN tar xvf wkhtmltox-0.12.4_linux-generic-amd64.tar.xz
RUN mv wkhtmltox/bin/wkhtmlto* /usr/bin

ADD requirements/* /app/
#RUN pip3 install -r development.txt
RUN pip3 install -r production.txt
RUN pip3 install gunicorn

ADD . /app/

# Make 'wait' script available for the entrypoint-script.
ADD https://raw.githubusercontent.com/eficode/wait-for/master/wait-for /usr/local/bin/waitfor
RUN chmod +x /usr/local/bin/waitfor

### Dependencies for static assets - Under development ###z

# Install nvm to install npm and node.js
ENV NVM_DIR /root/.nvm
ENV NODE_VERSION 8
RUN mkdir ${NVM_DIR}
RUN curl -o- https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash && \
    chmod +x ${NVM_DIR}/nvm.sh && \
    . ${NVM_DIR}/nvm.sh && \
    nvm alias default "${NODE_VERSION}" && \
    nvm use default && \
    DEFAULT_NODE_VERSION=$(nvm version default) && \
    ln -sf ${NVM_DIR}/versions/node/${DEFAULT_NODE_VERSION}/bin/node /usr/bin/nodejs && \
    ln -sf ${NVM_DIR}/versions/node/${DEFAULT_NODE_VERSION}/bin/node /usr/bin/node && \
    ln -sf ${NVM_DIR}/versions/node/${DEFAULT_NODE_VERSION}/bin/npm /usr/bin/npm


RUN apt-get install python2.7 -y
RUN npm config set python python2.7

RUN npm install bower
RUN npm install grunt-cli
RUN npm install

RUN npm rebuild jpegtran-bin

RUN npm run bower
RUN npm run grunt

RUN python3 manage.py collectstatic --noinput
RUN python3 manage.py compress --force

# Add Tini
ENV TINI_VERSION v0.19.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini
RUN chmod +x /tini
ENTRYPOINT ["/tini", "--"]

# Run your program under Tini
CMD ["gunicorn", "-c", "conf/gunicorn_config.py", "qcat.wsgi"]
# or docker run your-image /your/program ...

USER qcat
